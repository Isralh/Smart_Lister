import React, { useContext, useState, useEffect, createContext, useReducer } from 'react'
import { Container, ContentContainer, MapContainer, ListingContainer } from './PropertiesStyling'
import Nav from '../../Home/Nav/Nav'
import Search from '../Search/Search'
import Listing from '../Listing/Listing'
import { DataContext } from '../../HouseData/Data'
import Select from '../Select/Select'
import Maps from '../Map/Maps'
import axios from 'axios'

const initialState = {
  loading: true,
  error: '',
  propertyList: []
}
const reducer = (state, action) => {
  switch (action.type) {
    case 'Success':
      return {
        loading: false,
        propertyList: [action.payload],
        error: ''
      }
    case 'Error':
      return {
        loading: false,
        propertyList: '',
        error: 'Something went wrong'
      }
    default: return state
  }
}
export const propertiesContext = createContext()
export default function Properties () {
  const houseData = useContext(DataContext)
  const [listOfHomes, setListOfHomes] = useState(houseData[0])
  const [cityName, setCityName] = useState('All')
  const [priceToggle, setPriceToggle] = useState()
  const handelCityToggle = (city) => {
    const cityInput = city
    setCityName(cityInput)
  }
  const handlePriceToggle = (priceOrder) => {
    const priceOrdering = priceOrder
    setPriceToggle(priceOrdering)
  }
  const houseResult = houseData[0].filter(house => {
    return cityName === 'All' ? house : house.City === `${cityName}, PA`
  })

  const priceComparison = houseResult.sort((a, b) => {
    return priceToggle === 'Ascending' ? a.Price - b.Price : b.Price - a.Price
  })
  useEffect(() => {
    setListOfHomes(houseResult)
  }, [cityName, priceToggle])

  const [houseList, setHouseList] = useState()
  const [state, dispatch] = useReducer(reducer, initialState)
  useEffect(() => {
    const getProperties = async () => {
      const propertyData = await axios.get('http://localhost:3001/api/get/allProperties')
      try {
        console.log(propertyData.data)
        dispatch({ type: 'Success', payload: propertyData.data })
      } catch (e) {
        dispatch({ type: 'Error' })
      }
    }

    getProperties()
  }, [])

  useEffect(() => {
    if (state.propertyList.length > 0) {
      const currentAddress = state.propertyList[0].properties[0]
  
      const propertyImage = state.propertyList[0].images.filter(image => {
        if (currentAddress.id === image.properties_id) {
          return image
        }
      })
      console.log(propertyImage)
    }
  })

  return (
    <propertiesContext.Provider value={listOfHomes}>
      <Container>
        <Nav />
        <ContentContainer>
          <MapContainer>
            <Maps />
          </MapContainer>
          <ListingContainer>
            <Search />
            <Select getCity={handelCityToggle} orderByPrice={handlePriceToggle} />
            {state.loading ? <div>Loading Data...</div>
              : <Listing property={listOfHomes} />}
          </ListingContainer>
        </ContentContainer>
      </Container>
    </propertiesContext.Provider>
  )
}
